//Code generated by The Chimera Compiler.
.assembly 'chimera' {}
.assembly extern 'chimeralib' {}
.class public 'ChimeraProgram' extends ['mscorlib']'System'.'Object' {
	.field public static string 'option'
	.field public static string 'str'
.method public static hidebysig default int32 IsPalindrome (string str) cil managed
{
.locals init (
int32 'finish',
int32 'start')
		ldc.i4.0 
	stloc.0

		ldc.i4.0 
	stloc.1

	ldc.i4.s 0
	stloc 'start'
	ldsfld string 'ChimeraProgram'::'str'
	call int32 class ['chimeralib']'Chimera'.'Utils'::'LenStr'(string)
	pop
	ldc.i4.s 1
	sub
	stloc 'finish'
	'$000000':
	ldloc.1

	ldloc.0

	cgt
	brfalse '$000002'
brfalse '$000001'
'$000002':
	ldsfld string 'ChimeraProgram'::'str'
	ldloc.1
	call string class ['chimeralib']'Chimera'.'Utils'::'AtStr'(string, int32)
	pop
	ldsfld string 'ChimeraProgram'::'str'
	ldloc.0
	call string class ['chimeralib']'Chimera'.'Utils'::'AtStr'(string, int32)
	pop
	call int32 class ['chimeralib']'Chimera'.'Utils'::'CmpStr'(string, string)
	pop

	ldc.i4.s 0

	ceq
	ldc.i4.0
	ceq
	brfalse '$000003'
	ldc.i4 0
	ret
'$000003':
	ldloc.1
	ldc.i4.s 1
	add
	stloc 'start'
	ldloc.0
	ldc.i4.s 1
	sub
	stloc 'finish'

br '$000000'
'$000001':
	ldc.i4 1
	ret

ret
} // end of method ChimeraProgram::IsPalindrome
.method public static hidebysig default void Main () cil managed
{
	.entrypoint
	'$000004':
	ldstr "Input a string: "
	call void class ['chimeralib']'Chimera'.'Utils'::'WrStr'(string)
	call string class ['chimeralib']'Chimera'.'Utils'::'RdStr'()
	pop
	stsfld string 'ChimeraProgram'::'str'
	ldsfld string 'ChimeraProgram'::'str'
	call int32 class 'ChimeraProgram'::'IsPalindrome'(string)
	pop
	brfalse '$000006'
	ldstr "The string """
	ldsfld string 'ChimeraProgram'::'str'
	ldstr """ is a palindrome."
	call string class ['chimeralib']'Chimera'.'Utils'::'CatStr'(string, string)
	pop
	call string class ['chimeralib']'Chimera'.'Utils'::'CatStr'(string, string)
	pop
	call void class ['chimeralib']'Chimera'.'Utils'::'WrStr'(string)
'$000006':
	call void class ['chimeralib']'Chimera'.'Utils'::'WrLn'()
	ldstr "Check another string? "
	call void class ['chimeralib']'Chimera'.'Utils'::'WrStr'(string)
	call string class ['chimeralib']'Chimera'.'Utils'::'RdStr'()
	pop
	stsfld string 'ChimeraProgram'::'option'
	ldsfld string 'ChimeraProgram'::'option'
	call int32 class ['chimeralib']'Chimera'.'Utils'::'LenStr'(string)
	pop

	ldc.i4.s 0

	ceq
	brfalse '$000007'
	ldstr "N"
	stsfld string 'ChimeraProgram'::'option'
'$000007':
	ldsfld string 'ChimeraProgram'::'option'
	ldstr "Y"
	call int32 class ['chimeralib']'Chimera'.'Utils'::'CmpStr'(string, string)
	pop

	ldc.i4.s 0

	ceq
	ldc.i4.0
	ceq
	ldc.i4.1
	bne.un '$000009'
	ldsfld string 'ChimeraProgram'::'option'
	ldstr "y"
	call int32 class ['chimeralib']'Chimera'.'Utils'::'CmpStr'(string, string)
	pop

	ldc.i4.s 0

	ceq
	ldc.i4.0
	ceq
	ldc.i4.1
	bne.un '$000009'
	ldc.i4.1
	br '$000010'
'$000009':
	ldc.i4.0
¿$000010¿:
	brfalse '$000008'
brfalse '$000005'
'$000008':

br '$000004'
'$000005':
	ret
}
.method private static hidebysig specialname rtspecialname
default void '.cctor' ()  cil managed
 {
		ldstr " "
		stsfld string 'ChimeraProgram'::'option' 
		ldstr " "
		stsfld string 'ChimeraProgram'::'str' 
ret
}
}
