//Code generated by The Chimera Compiler.
.assembly 'chimera' {}
.assembly extern 'chimeralib' {}
.class public 'ChimeraProgram' extends ['mscorlib']'System'.'Object' {
		.field public static int32 'num'
		.field public static string 'option'
.method public static hidebysig default int32 IterativeFactorial (int32 n) cil managed
{
.locals init (
int32 'i',
int32 'r')
		ldc.i4.0 
stloc.0

		ldc.i4.0 
stloc.1

	ldc.i4.s 1
	stloc 'r'
	ldc.i4.s 2
	stloc 'i'
	$000000:
ldloc.0

ldarg.0

	cgt
ldc.i4.1
bne.un '$000002'
ldloc.1
ldloc.0
mul
	stloc 'r'
ldloc.0
	ldc.i4.s 1
	add
	stloc 'i'

br $000000$000001
ldloc.1
	ret

ret
} // end of method ChimeraProgram::IterativeFactorial
.method public static hidebysig default int32 RecursiveFactorial (int32 n) cil managed
{
.locals init (
)
	ldarg 'n'

	ldc.i4.s 1

	cgt
	ldc.i4.0
	ceq
ldc.i4.1
bne.un '$000004'

ret
} // end of method ChimeraProgram::RecursiveFactorial
.method public static hidebysig default void Main () cil managed
{
	.entrypoint
	$000006:
	ldstr "Input a number: "
	call void class ['chimeralib']'Chimera'.'Utils'::'WrStr'(string)
	call int32 class ['chimeralib']'Chimera'.'Utils'::'RdInt'()
pop
	stsfld int32 'ChimeraProgram'::'num'
	ldstr "Iterative factorial: "
	call void class ['chimeralib']'Chimera'.'Utils'::'WrStr'(string)
		ldsfld int32 'ChimeraProgram'::'num'
	call int32 class 'ChimeraProgram'::'IterativeFactorial'(int32)
pop
	call void class ['chimeralib']'Chimera'.'Utils'::'WrInt'(int32)
	call void class ['chimeralib']'Chimera'.'Utils'::'WrLn'()
	ldstr "Recursive factorial: "
	call void class ['chimeralib']'Chimera'.'Utils'::'WrStr'(string)
		ldsfld int32 'ChimeraProgram'::'num'
	call int32 class 'ChimeraProgram'::'RecursiveFactorial'(int32)
pop
	call void class ['chimeralib']'Chimera'.'Utils'::'WrInt'(int32)
	call void class ['chimeralib']'Chimera'.'Utils'::'WrLn'()
	ldstr "Compute another factorial? "
	call void class ['chimeralib']'Chimera'.'Utils'::'WrStr'(string)
	call string class ['chimeralib']'Chimera'.'Utils'::'RdStr'()
pop
	stsfld string 'ChimeraProgram'::'option'
		ldsfld string 'ChimeraProgram'::'option'
	call int32 class ['chimeralib']'Chimera'.'Utils'::'LenStr'(string)
pop

	ldc.i4.s 0

	ceq
ldc.i4.1
bne.un '$000008'
		ldsfld string 'ChimeraProgram'::'option'
	ldstr "Y"
	call int32 class ['chimeralib']'Chimera'.'Utils'::'CmpStr'(string, string)
pop

	ldc.i4.s 0

	ceq
	ldc.i4.0
	ceq
	ldc.i4.1
	bne.un '$000012'
		ldsfld string 'ChimeraProgram'::'option'
	ldstr "y"
	call int32 class ['chimeralib']'Chimera'.'Utils'::'CmpStr'(string, string)
pop

	ldc.i4.s 0

	ceq
	ldc.i4.0
	ceq
	ldc.i4.1
	bne.un '$000012'
	ldc.i4.1
	br $000013
$000012:
	ldc.i4.0
$000013:
ldc.i4.1
bne.un '$000010'

br $000006$000007
	ret
}
.method private static hidebysig specialname rtspecialname
default void '.cctor' ()  cil managed
 {
		ldc.i4.0 
		stsfld int32 'ChimeraProgram'::'num' 
		ldstr " "
		stsfld string 'ChimeraProgram'::'option' 
ret
}
}
